@plus = global i64 (i64, i64)* @add

define i64 @add(i64 %_x12, i64 %_y9) {
  %_x13 = alloca i64
  %_y10 = alloca i64
  store i64 %_x12, i64* %_x13
  store i64 %_y9, i64* %_y10
  %_x15 = load i64, i64* %_x13
  %_y16 = load i64, i64* %_y10
  %_bop17 = add i64 %_x15, %_y16
  ret i64 %_bop17
}

define i64 @program(i64 %_argc4, { i64, [0 x i8*] }* %_argv1) {
  %_plus7 = load i64 (i64, i64)*, i64 (i64, i64)** @plus
  %_result8 = call i64 %_plus7(i64 1, i64 1)
  ret i64 %_result8
}


declare i64* @oat_malloc(i64)
declare i64* @oat_alloc_array(i64)
declare void @oat_assert_not_null(i8*)
declare void @oat_assert_array_length(i64*, i64)
declare { i64, [0 x i64] }* @array_of_string(i8*)
declare i8* @string_of_array({ i64, [0 x i64] }*)
declare i64 @length_of_string(i8*)
declare i8* @string_of_int(i64)
declare i8* @string_cat(i8*, i8*)
declare void @print_string(i8*)
declare void @print_int(i64)
declare void @print_bool(i1)

