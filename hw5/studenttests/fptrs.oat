
/* Roman Angehrn */

int fermat(int n) {
    /* calculate n-th fermat number */
    if (n < 0) {
        return -1;
    }

    return pow(2, pow(2, n)) + 1;
}

int pow(int b, int e) {
    if (e < 0) {
        return -1;
    }

    var p = 1;
    for (; e > 0; e = e - 1;) {
        p = p * b;
    }

    return p;
}

int fib(int n) {
    /* calculate n-th fibonacci number */
    if (n < 1) {
        return 0;
    } else if (n == 1) {
        return 1;
    }
    
    return fib(n - 1) + fib(n - 2);
}

int fac(int n) {
    /* calculate n factorial */
    if (n < 2) {
        return 1;
    }
    
    return n * fac(n - 1);
}

int program(int argc, string[] argv) {
    var functions = new ((int) -> int)[]{fermat, fac, fib};
    var values = new int[3]{i -> 5 * (i + 1)};
    var results = new int[3]{i -> functions[i](values[i])};
    var expected = new int[]{4294967297, 3628800, 610};
    var match = new bool[3]{i -> results[i] == expected[i]};

    for (var i = 0; i < 3; i = i + 1;) {
        if (!match[i]) {
            return 0;
        }
    }

    return 1;
}